/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finance_system;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.sun.glass.events.KeyEvent;
import static finance_system.Number_2_words.convert;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author chriswatia
 */
public class FinanceSystem extends javax.swing.JFrame {

    DbConnect db = new DbConnect();
    Connection con = null;
    PreparedStatement ps0, ps, ps1, ps2, ps3, ps4, ps5, ps6, ps7, ps8, ps9, ps10 = null;
    ResultSet rs0, rs, rs1, rs2, rs3, rs4, rs5, rs6, rs7, rs8, rs9, rs10 = null;
    String ImgPath = null;

    /**
     * Creates new form FinanceSystem
     */
    public FinanceSystem() {
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();

    }

    //method to show payment records of the selected student
    public void show_pay_records() {
        try {
            con = db.start();
            ps = con.prepareStatement("SELECT date_of_payment AS 'DATE',receipt_no AS 'RECEIPT NO',amount_paid AS 'AMOUNT',mode_of_payment AS 'MODE' ,payment_code AS 'CODE',"
                    + " notes AS 'NOTES' FROM payments WHERE admno='" + admno.getText() + "'");
            rs = ps.executeQuery();
            payments_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //method to show voteheads
    public void show_voteheads() {
        try {
            con = db.start();
            ps = con.prepareStatement("select id,class_name,votehead,term,amount,year from voteheads order by class_name");
            rs = ps.executeQuery();
            voteheads_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        Main = new javax.swing.JPanel();
        sidebar = new javax.swing.JPanel();
        voteheads = new javax.swing.JLabel();
        structure = new javax.swing.JLabel();
        fee_payment = new javax.swing.JLabel();
        balances = new javax.swing.JLabel();
        admin = new javax.swing.JLabel();
        records = new javax.swing.JLabel();
        dashboard1 = new javax.swing.JLabel();
        dashboard2 = new javax.swing.JLabel();
        parent = new javax.swing.JPanel();
        dashboard = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        help = new javax.swing.JLabel();
        payment = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        admno = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        feeStatement = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        termFee = new javax.swing.JLabel();
        className = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stream = new javax.swing.JLabel();
        term = new javax.swing.JComboBox<>();
        searchName = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        acc_debits = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        acc_credits = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        balance = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        amount_paid = new javax.swing.JTextField();
        mode_of_payment = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        payment_code = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        receipt_no = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        notes = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        amount_in_words = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        pay_date = new com.toedter.calendar.JDateChooser();
        jScrollPane5 = new javax.swing.JScrollPane();
        payments_table = new javax.swing.JTable();
        receipts = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        voteHeads = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        voteheads_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        vote_head = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        class_votehead = new javax.swing.JComboBox<>();
        save_votehead = new javax.swing.JButton();
        update_votejead = new javax.swing.JButton();
        delete_voteheads = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        votehead_year = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();
        term_amount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        term_votehead = new javax.swing.JComboBox<>();
        fee_structure = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        class_structure = new javax.swing.JComboBox<>();
        view_structure = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel75 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jLabel32 = new javax.swing.JLabel();
        term_structure = new javax.swing.JComboBox<>();
        fee_entry = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        class_fee = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        term_fee = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        fee_amount = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        enter_fee = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        fees_table = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();
        update_fee = new javax.swing.JButton();
        fee_year = new javax.swing.JComboBox<>();
        balancespanel = new javax.swing.JPanel();
        bal = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        main = new javax.swing.JPanel();
        balanc = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        balance_table = new javax.swing.JTable();
        panel = new javax.swing.JPanel();
        reportPanel = new javax.swing.JScrollPane();
        generate_notes = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        class_fee_balance = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        students = new javax.swing.JPanel();
        header_students = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        main_students = new javax.swing.JPanel();
        manage_students = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        add_student = new javax.swing.JButton();
        student_id = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        student_name = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        class_name = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        stream_name = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        combo_year = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        students_table = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        fee_balance_label = new javax.swing.JLabel();
        fee_balance = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel47 = new javax.swing.JLabel();
        search_student = new javax.swing.JTextField();
        move_students = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        class_move = new javax.swing.JComboBox<>();
        jLabel56 = new javax.swing.JLabel();
        move_student = new javax.swing.JButton();
        move_year = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        Help = new javax.swing.JPanel();
        reports = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        payRecords = new javax.swing.JButton();
        payReports = new javax.swing.JButton();
        reportPane = new javax.swing.JPanel();
        record = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel46 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        view_records = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        tsum = new javax.swing.JTextField();
        jLabel77 = new javax.swing.JLabel();
        records_class = new javax.swing.JComboBox<>();
        jLabel150 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        records_term = new javax.swing.JComboBox<>();
        records_mode = new javax.swing.JComboBox<>();
        payreport = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel158 = new javax.swing.JLabel();
        records_term1 = new javax.swing.JComboBox<>();
        view_records1 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SCHOOL FINANCE MANAGEMENT SYSTEM");
        setBounds(new java.awt.Rectangle(0, 0, 1350, 700));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));

        Main.setBackground(new java.awt.Color(255, 255, 255));
        Main.setPreferredSize(new java.awt.Dimension(1350, 700));

        sidebar.setBackground(new java.awt.Color(0, 51, 51));
        sidebar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sidebar.setPreferredSize(new java.awt.Dimension(220, 650));

        voteheads.setBackground(new java.awt.Color(59, 59, 51));
        voteheads.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        voteheads.setForeground(new java.awt.Color(255, 255, 255));
        voteheads.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/voteheads.png"))); // NOI18N
        voteheads.setText("    Vote Heads");
        voteheads.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        voteheads.setPreferredSize(new java.awt.Dimension(60, 40));
        voteheads.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voteheadsMouseClicked(evt);
            }
        });

        structure.setBackground(new java.awt.Color(59, 59, 51));
        structure.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        structure.setForeground(new java.awt.Color(255, 255, 255));
        structure.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fee_structure.png"))); // NOI18N
        structure.setText("   Fee Structure");
        structure.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        structure.setPreferredSize(new java.awt.Dimension(60, 40));
        structure.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                structureMouseClicked(evt);
            }
        });

        fee_payment.setBackground(new java.awt.Color(59, 59, 51));
        fee_payment.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fee_payment.setForeground(new java.awt.Color(255, 255, 255));
        fee_payment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/payment.png"))); // NOI18N
        fee_payment.setText("    Payments");
        fee_payment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fee_payment.setPreferredSize(new java.awt.Dimension(60, 40));
        fee_payment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fee_paymentMouseClicked(evt);
            }
        });

        balances.setBackground(new java.awt.Color(59, 59, 51));
        balances.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        balances.setForeground(new java.awt.Color(255, 255, 255));
        balances.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/balance.png"))); // NOI18N
        balances.setText("    Balances");
        balances.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        balances.setPreferredSize(new java.awt.Dimension(60, 40));
        balances.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                balancesMouseClicked(evt);
            }
        });

        admin.setBackground(new java.awt.Color(59, 59, 51));
        admin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        admin.setForeground(new java.awt.Color(255, 255, 255));
        admin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fees.png"))); // NOI18N
        admin.setText("  Fees Entry");
        admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        admin.setPreferredSize(new java.awt.Dimension(60, 40));
        admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminMouseClicked(evt);
            }
        });

        records.setBackground(new java.awt.Color(59, 59, 51));
        records.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        records.setForeground(new java.awt.Color(255, 255, 255));
        records.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/record.png"))); // NOI18N
        records.setText("    Records");
        records.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        records.setPreferredSize(new java.awt.Dimension(60, 40));
        records.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recordsMouseClicked(evt);
            }
        });

        dashboard1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dashboard1.setForeground(new java.awt.Color(255, 255, 255));
        dashboard1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N
        dashboard1.setText("    DashBoard");
        dashboard1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard1MouseClicked(evt);
            }
        });

        dashboard2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        dashboard2.setForeground(new java.awt.Color(255, 255, 255));
        dashboard2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/students.png"))); // NOI18N
        dashboard2.setText("   Students");
        dashboard2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sidebarLayout = new javax.swing.GroupLayout(sidebar);
        sidebar.setLayout(sidebarLayout);
        sidebarLayout.setHorizontalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fee_payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(balances, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(records, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(structure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(voteheads, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dashboard1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(dashboard2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(admin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        sidebarLayout.setVerticalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dashboard1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(dashboard2)
                .addGap(30, 30, 30)
                .addComponent(voteheads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(structure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(admin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(fee_payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(balances, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(records, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        parent.setBackground(new java.awt.Color(0, 153, 153));
        parent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        parent.setPreferredSize(new java.awt.Dimension(1130, 650));
        parent.setLayout(new java.awt.CardLayout());

        dashboard.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        dashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboard.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("             STUDENTS");
        jLabel48.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel48MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 255, 0));

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("             PAYMENTS");
        jLabel50.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel50MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 0));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("                FEES");
        jLabel49.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel49MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(255, 153, 255));

        help.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        help.setForeground(new java.awt.Color(255, 255, 255));
        help.setText("            HELP");
        help.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(help, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dashboardLayout = new javax.swing.GroupLayout(dashboard);
        dashboard.setLayout(dashboardLayout);
        dashboardLayout.setHorizontalGroup(
            dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(126, 126, 126)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(285, Short.MAX_VALUE))
        );
        dashboardLayout.setVerticalGroup(
            dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(106, 106, 106)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(288, Short.MAX_VALUE))
        );

        parent.add(dashboard, "card8");

        payment.setBackground(new java.awt.Color(255, 255, 255));
        payment.setPreferredSize(new java.awt.Dimension(1000, 600));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel10.setPreferredSize(new java.awt.Dimension(728, 240));

        admno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        admno.setForeground(new java.awt.Color(0, 0, 255));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("ADM NO :");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("NAME :");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("CLASS :");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 153, 153));
        jLabel22.setText("ACCOUNT DETAILS");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("TOTAL DEBITS :");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setText("TOTAL CREDITS :");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setText("A/C BALANCE :");

        feeStatement.setBackground(new java.awt.Color(0, 0, 204));
        feeStatement.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        feeStatement.setForeground(new java.awt.Color(255, 255, 255));
        feeStatement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fee_statement.png"))); // NOI18N
        feeStatement.setText("Fees Statement");
        feeStatement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feeStatementActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("THIS TERMS FEES :");

        search.setBackground(new java.awt.Color(0, 51, 204));
        search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        termFee.setBackground(new java.awt.Color(255, 255, 255));
        termFee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        termFee.setForeground(new java.awt.Color(0, 0, 255));

        className.setBackground(new java.awt.Color(255, 255, 255));
        className.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        className.setForeground(new java.awt.Color(0, 0, 255));
        className.setOpaque(true);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("STREAM :");

        stream.setBackground(new java.awt.Color(255, 255, 255));
        stream.setForeground(new java.awt.Color(0, 0, 255));
        stream.setOpaque(true);
        stream.setPreferredSize(new java.awt.Dimension(60, 20));

        term.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        term.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TERM I", "TERM II", "TERM III" }));
        term.setPreferredSize(new java.awt.Dimension(79, 25));

        searchName.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        searchName.setText("search by name");
        searchName.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchName.setOpaque(true);
        searchName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchNameMouseClicked(evt);
            }
        });

        name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        name.setForeground(new java.awt.Color(0, 0, 255));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 255));
        jLabel42.setText("Kshs.");

        acc_debits.setBackground(new java.awt.Color(255, 255, 255));
        acc_debits.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acc_debits.setForeground(new java.awt.Color(0, 0, 255));
        acc_debits.setPreferredSize(new java.awt.Dimension(40, 20));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 255));
        jLabel43.setText("Kshs.");

        acc_credits.setBackground(new java.awt.Color(255, 255, 255));
        acc_credits.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acc_credits.setForeground(new java.awt.Color(0, 0, 255));
        acc_credits.setPreferredSize(new java.awt.Dimension(40, 20));

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 255));
        jLabel44.setText("Kshs.");

        balance.setBackground(new java.awt.Color(255, 255, 255));
        balance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        balance.setForeground(new java.awt.Color(0, 0, 255));
        balance.setPreferredSize(new java.awt.Dimension(40, 20));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 255));
        jLabel45.setText("Kshs.");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel19))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(admno, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)
                                        .addComponent(term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(search))
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(searchName))))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stream, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(termFee, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acc_credits, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acc_debits, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel44)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(feeStatement)
                        .addGap(36, 36, 36))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(term, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(search))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(admno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(className, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel42))
                            .addComponent(acc_debits, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(acc_credits, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel43)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(balance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stream, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(termFee, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(feeStatement))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(757, 260));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setText("AMOUNT PAID:*");

        amount_paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amount_paidActionPerformed(evt);
            }
        });
        amount_paid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amount_paidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                amount_paidKeyTyped(evt);
            }
        });

        mode_of_payment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-selected-", "bank slip", "cheque" }));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setText("PAYMENT CODE :");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("NOTES :");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setText("RECEIPT NO:");

        submit.setBackground(new java.awt.Color(0, 0, 204));
        submit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        submit.setForeground(java.awt.Color.white);
        submit.setText("SUBMIT");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("DATE :");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setText("AMOUNT IN WORDS :");

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel74.setText("MODE OF PAYMENT :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(notes, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel74)
                                .addGap(2, 2, 2)
                                .addComponent(mode_of_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel29))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(5, 5, 5)
                                .addComponent(amount_paid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel36)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(payment_code, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(receipt_no)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(pay_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(amount_in_words, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(27, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(amount_paid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(amount_in_words, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mode_of_payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pay_date, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(payment_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(notes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receipt_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        payments_table.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        payments_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "DATE", "RECEIPT NO", "AMOUNT", "MODE", "NOTES"
            }
        ));
        payments_table.setPreferredSize(new java.awt.Dimension(375, 112));
        payments_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payments_tableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(payments_table);

        receipts.setBackground(new java.awt.Color(0, 0, 204));
        receipts.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        receipts.setForeground(new java.awt.Color(255, 255, 255));
        receipts.setText("Receipt");
        receipts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiptsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentLayout = new javax.swing.GroupLayout(payment);
        payment.setLayout(paymentLayout);
        paymentLayout.setHorizontalGroup(
            paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addGroup(paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(receipts)
                        .addContainerGap(218, Short.MAX_VALUE))
                    .addGroup(paymentLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11)
                        .addContainerGap())))
        );
        paymentLayout.setVerticalGroup(
            paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentLayout.createSequentialGroup()
                .addGroup(paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paymentLayout.createSequentialGroup()
                        .addComponent(receipts)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        parent.add(payment, "card1");

        voteHeads.setBackground(new java.awt.Color(255, 255, 255));
        voteHeads.setForeground(new java.awt.Color(255, 255, 255));
        voteHeads.setPreferredSize(new java.awt.Dimension(1000, 600));

        voteheads_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "S/NO", "VOTEHEAD", "", "Title 4", "Title 5", "Title 6"
            }
        ));
        voteheads_table.setRowHeight(25);
        voteheads_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voteheads_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(voteheads_table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("VOTE HEAD :");

        vote_head.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("TERM :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("CLASS :");

        class_votehead.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        class_votehead.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FORM 1", "FORM 2", "FORM 3", "FORM 4" }));

        save_votehead.setBackground(new java.awt.Color(0, 0, 204));
        save_votehead.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        save_votehead.setForeground(new java.awt.Color(255, 255, 255));
        save_votehead.setText("SAVE");
        save_votehead.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                save_voteheadMouseClicked(evt);
            }
        });
        save_votehead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_voteheadActionPerformed(evt);
            }
        });

        update_votejead.setBackground(new java.awt.Color(0, 0, 204));
        update_votejead.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update_votejead.setForeground(new java.awt.Color(255, 255, 255));
        update_votejead.setText("UPDATE");
        update_votejead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_votejeadActionPerformed(evt);
            }
        });

        delete_voteheads.setBackground(new java.awt.Color(0, 0, 204));
        delete_voteheads.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete_voteheads.setForeground(new java.awt.Color(255, 255, 255));
        delete_voteheads.setText("DELETE");
        delete_voteheads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_voteheadsActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel40.setText("YEAR :");

        votehead_year.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        votehead_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029" }));

        jSeparator3.setBackground(new java.awt.Color(102, 255, 0));
        jSeparator3.setOpaque(true);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel28.setText("VOTE HEADS");

        term_amount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        term_amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                term_amountKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("amount");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("KSHS.");

        term_votehead.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TERM I", "TERM II", "TERM III" }));

        javax.swing.GroupLayout voteHeadsLayout = new javax.swing.GroupLayout(voteHeads);
        voteHeads.setLayout(voteHeadsLayout);
        voteHeadsLayout.setHorizontalGroup(
            voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voteHeadsLayout.createSequentialGroup()
                .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(voteHeadsLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1052, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(voteHeadsLayout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(jLabel28))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(voteHeadsLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel40)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(votehead_year, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(class_votehead, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vote_head, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104)
                .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, voteHeadsLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(term_votehead, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, voteHeadsLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(term_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(update_votejead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save_votehead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_voteheads))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        voteHeadsLayout.setVerticalGroup(
            voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voteHeadsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(voteHeadsLayout.createSequentialGroup()
                        .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(save_votehead)
                            .addComponent(term_votehead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(update_votejead)
                            .addComponent(term_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(delete_voteheads)
                        .addGap(10, 10, 10))
                    .addGroup(voteHeadsLayout.createSequentialGroup()
                        .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(class_votehead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(vote_head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(voteHeadsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(votehead_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(216, 216, 216))
        );

        parent.add(voteHeads, "card3");

        fee_structure.setBackground(new java.awt.Color(255, 255, 255));
        fee_structure.setPreferredSize(new java.awt.Dimension(1000, 600));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Select a class to view Fee Structure");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("CLASS");

        class_structure.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        class_structure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FORM 1", "FORM 2", "FORM 3", "FORM 4" }));
        class_structure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                class_structureActionPerformed(evt);
            }
        });

        view_structure.setBackground(new java.awt.Color(0, 0, 204));
        view_structure.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_structure.setForeground(new java.awt.Color(255, 255, 255));
        view_structure.setText("VIEW");
        view_structure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_structureActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 204));
        jLabel10.setOpaque(true);

        jSeparator4.setBackground(new java.awt.Color(0, 255, 0));
        jSeparator4.setOpaque(true);

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel75.setText("FEE STRUCTURE");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("TERM");

        term_structure.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        term_structure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TERM I", "TERM II", "TERM III" }));
        term_structure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                term_structureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fee_structureLayout = new javax.swing.GroupLayout(fee_structure);
        fee_structure.setLayout(fee_structureLayout);
        fee_structureLayout.setHorizontalGroup(
            fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fee_structureLayout.createSequentialGroup()
                .addGroup(fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fee_structureLayout.createSequentialGroup()
                        .addGroup(fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fee_structureLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel8)
                                .addGap(179, 179, 179)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(fee_structureLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel75))
                            .addGroup(fee_structureLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(class_structure, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 1071, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(fee_structureLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(term_structure, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(view_structure)))
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        fee_structureLayout.setVerticalGroup(
            fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fee_structureLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel75)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(class_structure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fee_structureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(term_structure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(view_structure))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
        );

        parent.add(fee_structure, "card4");

        fee_entry.setBackground(new java.awt.Color(255, 255, 255));
        fee_entry.setForeground(new java.awt.Color(255, 255, 255));
        fee_entry.setPreferredSize(new java.awt.Dimension(1000, 600));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("ENTER CLASS FEES");
        jLabel7.setOpaque(true);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("CLASS :");

        class_fee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        class_fee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-SELECT-", "FORM 1", "FORM 2", "FORM 3", "FORM 4" }));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel37.setText("TERM :");

        term_fee.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        term_fee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-SELECT-", "TERM I", "TERM II", "TERM III" }));
        term_fee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                term_feeActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("FEE AMOUNT :");

        fee_amount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel39.setText("YEAR :");

        enter_fee.setBackground(new java.awt.Color(0, 0, 204));
        enter_fee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        enter_fee.setForeground(java.awt.Color.white);
        enter_fee.setText("ENTER ");
        enter_fee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enter_feeActionPerformed(evt);
            }
        });

        fees_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        fees_table.setRowHeight(25);
        fees_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fees_tableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(fees_table);

        jSeparator5.setBackground(new java.awt.Color(51, 255, 0));
        jSeparator5.setOpaque(true);

        update_fee.setBackground(new java.awt.Color(0, 0, 204));
        update_fee.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update_fee.setForeground(java.awt.Color.white);
        update_fee.setText("UPDATE");
        update_fee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_feeActionPerformed(evt);
            }
        });

        fee_year.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        fee_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022" }));

        javax.swing.GroupLayout fee_entryLayout = new javax.swing.GroupLayout(fee_entry);
        fee_entry.setLayout(fee_entryLayout);
        fee_entryLayout.setHorizontalGroup(
            fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fee_entryLayout.createSequentialGroup()
                .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fee_entryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator5))
                    .addGroup(fee_entryLayout.createSequentialGroup()
                        .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fee_entryLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1068, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(fee_entryLayout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(fee_entryLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel39)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(fee_year, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(fee_entryLayout.createSequentialGroup()
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(class_fee, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(27, 27, 27)
                                        .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel37)
                                            .addComponent(jLabel18))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(term_fee, 0, 127, Short.MAX_VALUE)
                                            .addComponent(fee_amount))
                                        .addGap(97, 97, 97)
                                        .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(enter_fee)
                                            .addComponent(update_fee)))))
                            .addGroup(fee_entryLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );
        fee_entryLayout.setVerticalGroup(
            fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fee_entryLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(term_fee, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel37)
                        .addComponent(enter_fee))
                    .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(class_fee, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)))
                .addGap(15, 15, 15)
                .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fee_entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fee_year)
                        .addComponent(jLabel39)
                        .addComponent(jLabel18)
                        .addComponent(fee_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(update_fee))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        parent.add(fee_entry, "card6");

        balancespanel.setBackground(new java.awt.Color(255, 255, 255));

        bal.setBackground(new java.awt.Color(255, 255, 255));

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel71.setText("select a class to view students with balance");

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel76.setText("STUDENTS WITH BALANCE");

        jSeparator6.setBackground(new java.awt.Color(0, 255, 0));
        jSeparator6.setOpaque(true);
        jSeparator6.setPreferredSize(new java.awt.Dimension(1000, 3));

        javax.swing.GroupLayout balLayout = new javax.swing.GroupLayout(bal);
        bal.setLayout(balLayout);
        balLayout.setHorizontalGroup(
            balLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(balLayout.createSequentialGroup()
                .addGroup(balLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(balLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel71))
                    .addGroup(balLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel76)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        balLayout.setVerticalGroup(
            balLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balLayout.createSequentialGroup()
                .addComponent(jLabel76)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel71)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        main.setBackground(new java.awt.Color(255, 255, 255));
        main.setLayout(new java.awt.CardLayout());

        balanc.setBackground(new java.awt.Color(255, 255, 255));

        balance_table.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        balance_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ADMNO", "NAME", "BALANCE"
            }
        ));
        balance_table.setColumnSelectionAllowed(true);
        balance_table.setRowHeight(25);
        jScrollPane6.setViewportView(balance_table);
        balance_table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout balancLayout = new javax.swing.GroupLayout(balanc);
        balanc.setLayout(balancLayout);
        balancLayout.setHorizontalGroup(
            balancLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balancLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1077, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        balancLayout.setVerticalGroup(
            balancLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balancLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 106, Short.MAX_VALUE))
        );

        main.add(balanc, "card12");

        panel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1130, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
        );

        main.add(panel, "card4");
        main.add(reportPanel, "card4");

        generate_notes.setBackground(new java.awt.Color(0, 51, 204));
        generate_notes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        generate_notes.setForeground(new java.awt.Color(255, 255, 255));
        generate_notes.setText("Generate Slip");
        generate_notes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_notesActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 204));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("CHECK FEE BALANCE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        class_fee_balance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        class_fee_balance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-SELECT-", "FORM 1 ", "FORM 2  ", "FORM 3  ", "FORM 4" }));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("CLASS :");

        javax.swing.GroupLayout balancespanelLayout = new javax.swing.GroupLayout(balancespanel);
        balancespanel.setLayout(balancespanelLayout);
        balancespanelLayout.setHorizontalGroup(
            balancespanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(balancespanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(class_fee_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jButton4)
                .addGap(114, 114, 114)
                .addComponent(generate_notes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        balancespanelLayout.setVerticalGroup(
            balancespanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balancespanelLayout.createSequentialGroup()
                .addComponent(bal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(balancespanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(balancespanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(class_fee_balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(balancespanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(generate_notes)))
                .addGap(20, 20, 20)
                .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parent.add(balancespanel, "card11");

        header_students.setPreferredSize(new java.awt.Dimension(1150, 50));

        jLabel53.setBackground(new java.awt.Color(0, 153, 204));
        jLabel53.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel53.setForeground(java.awt.Color.white);
        jLabel53.setText("    MANAGE STUDENTS      ");
        jLabel53.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel53.setOpaque(true);
        jLabel53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel53MouseClicked(evt);
            }
        });

        jLabel54.setBackground(new java.awt.Color(0, 153, 204));
        jLabel54.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel54.setForeground(java.awt.Color.white);
        jLabel54.setText("        PROMOTE STUDENTS      ");
        jLabel54.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jLabel54.setOpaque(true);
        jLabel54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel54MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout header_studentsLayout = new javax.swing.GroupLayout(header_students);
        header_students.setLayout(header_studentsLayout);
        header_studentsLayout.setHorizontalGroup(
            header_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header_studentsLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel53)
                .addGap(111, 111, 111)
                .addComponent(jLabel54)
                .addContainerGap(613, Short.MAX_VALUE))
        );
        header_studentsLayout.setVerticalGroup(
            header_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(header_studentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(header_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        main_students.setPreferredSize(new java.awt.Dimension(1145, 595));
        main_students.setLayout(new java.awt.CardLayout());

        manage_students.setBackground(new java.awt.Color(255, 255, 255));
        manage_students.setPreferredSize(new java.awt.Dimension(1145, 595));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("ADM NO :");

        add_student.setBackground(new java.awt.Color(0, 0, 204));
        add_student.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add_student.setForeground(java.awt.Color.white);
        add_student.setText("ADD ");
        add_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_studentActionPerformed(evt);
            }
        });

        student_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        student_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                student_idKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("NAME :");

        student_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        student_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_nameActionPerformed(evt);
            }
        });
        student_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                student_nameKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("CLASS :");

        class_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        class_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FORM 1 ", "FORM 2  ", "FORM 3  ", "FORM 4 " }));
        class_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                class_nameActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("STREAM :");

        stream_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        stream_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EAST", "WEST", "SOUTH" }));

        jButton3.setBackground(new java.awt.Color(0, 0, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(java.awt.Color.white);
        jButton3.setText("UPDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setText("YEAR :");

        combo_year.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        combo_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029" }));

        students_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        students_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ADMNO", "NAME", "CLASS", "STREAM"
            }
        ));
        students_table.setCellSelectionEnabled(true);
        students_table.setRowHeight(25);
        students_table.setRowMargin(4);
        students_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                students_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(students_table);
        students_table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel41.setText("MANAGE STUDENTS");

        fee_balance_label.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fee_balance_label.setText("FEE_BALANCE :");

        fee_balance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fee_balance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fee_balanceKeyTyped(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 0, 204));
        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setForeground(java.awt.Color.white);
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 255, 0));
        jSeparator2.setOpaque(true);

        jLabel47.setBackground(new java.awt.Color(255, 255, 255));
        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setText("Search :");

        search_student.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search_student.setText("enter admno or name to search");
        search_student.setPreferredSize(new java.awt.Dimension(181, 23));
        search_student.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_studentMouseClicked(evt);
            }
        });
        search_student.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_studentKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout manage_studentsLayout = new javax.swing.GroupLayout(manage_students);
        manage_students.setLayout(manage_studentsLayout);
        manage_studentsLayout.setHorizontalGroup(
            manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(manage_studentsLayout.createSequentialGroup()
                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manage_studentsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(manage_studentsLayout.createSequentialGroup()
                        .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(manage_studentsLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(manage_studentsLayout.createSequentialGroup()
                                        .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(student_name, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                            .addComponent(student_id)))
                                    .addGroup(manage_studentsLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(class_name, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(70, 70, 70)
                                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(manage_studentsLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stream_name, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, manage_studentsLayout.createSequentialGroup()
                                        .addComponent(fee_balance_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fee_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(manage_studentsLayout.createSequentialGroup()
                                        .addComponent(jLabel38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(combo_year, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(56, 56, 56)
                                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delete)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(add_student, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(manage_studentsLayout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(jLabel41)
                                .addGap(252, 252, 252)
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search_student, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 283, Short.MAX_VALUE)))
                .addContainerGap())
        );
        manage_studentsLayout.setVerticalGroup(
            manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manage_studentsLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search_student, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(student_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(stream_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_student))
                .addGap(15, 15, 15)
                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel38)
                        .addComponent(combo_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(student_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)))
                .addGap(15, 15, 15)
                .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fee_balance_label)
                        .addComponent(fee_balance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manage_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(class_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        main_students.add(manage_students, "card3");

        move_students.setBackground(java.awt.Color.white);
        move_students.setPreferredSize(new java.awt.Dimension(1145, 595));

        jLabel55.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel55.setText("CLASS :");

        class_move.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        class_move.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-SELECT-", "FORM 1", "FORM 2", "FORM 3", "FORM 4" }));

        jLabel56.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel56.setText("YEAR :");

        move_student.setText("PROMOTE");
        move_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                move_studentActionPerformed(evt);
            }
        });

        move_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022" }));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ADMNO", "NAME", "STREAM", "FEE BALANCE"
            }
        ));
        jTable3.setRowHeight(25);
        jScrollPane1.setViewportView(jTable3);

        javax.swing.GroupLayout move_studentsLayout = new javax.swing.GroupLayout(move_students);
        move_students.setLayout(move_studentsLayout);
        move_studentsLayout.setHorizontalGroup(
            move_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(move_studentsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel55)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(class_move, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(move_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(move_student)
                .addContainerGap(643, Short.MAX_VALUE))
            .addGroup(move_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(move_studentsLayout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(72, Short.MAX_VALUE)))
        );
        move_studentsLayout.setVerticalGroup(
            move_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(move_studentsLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(move_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(class_move, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(move_student, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(move_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(479, Short.MAX_VALUE))
            .addGroup(move_studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(move_studentsLayout.createSequentialGroup()
                    .addGap(91, 91, 91)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(47, Short.MAX_VALUE)))
        );

        main_students.add(move_students, "card5");

        javax.swing.GroupLayout studentsLayout = new javax.swing.GroupLayout(students);
        students.setLayout(studentsLayout);
        studentsLayout.setHorizontalGroup(
            studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(header_students, javax.swing.GroupLayout.DEFAULT_SIZE, 1130, Short.MAX_VALUE)
                    .addGroup(studentsLayout.createSequentialGroup()
                        .addComponent(main_students, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        studentsLayout.setVerticalGroup(
            studentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentsLayout.createSequentialGroup()
                .addComponent(header_students, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(main_students, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        parent.add(students, "card11");

        javax.swing.GroupLayout HelpLayout = new javax.swing.GroupLayout(Help);
        Help.setLayout(HelpLayout);
        HelpLayout.setHorizontalGroup(
            HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1130, Short.MAX_VALUE)
        );
        HelpLayout.setVerticalGroup(
            HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        parent.add(Help, "card12");

        header.setBackground(new java.awt.Color(204, 255, 204));

        payRecords.setBackground(new java.awt.Color(51, 51, 255));
        payRecords.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        payRecords.setForeground(new java.awt.Color(255, 255, 255));
        payRecords.setText("Payment Records");
        payRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payRecordsActionPerformed(evt);
            }
        });

        payReports.setBackground(new java.awt.Color(51, 51, 255));
        payReports.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        payReports.setForeground(new java.awt.Color(255, 255, 255));
        payReports.setText("Payment Reports");
        payReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payReportsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(payRecords)
                .addGap(193, 193, 193)
                .addComponent(payReports)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payReports)
                    .addComponent(payRecords, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        reportPane.setLayout(new java.awt.CardLayout());

        record.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator8.setBackground(new java.awt.Color(102, 255, 0));
        jSeparator8.setOpaque(true);

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel46.setText("RECORDS");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(25);
        jScrollPane4.setViewportView(jTable1);

        view_records.setBackground(new java.awt.Color(0, 0, 204));
        view_records.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_records.setForeground(new java.awt.Color(255, 255, 255));
        view_records.setText("VIEW");
        view_records.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_recordsActionPerformed(evt);
            }
        });

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel73.setText("Total :");

        tsum.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tsum.setForeground(new java.awt.Color(0, 0, 153));

        jLabel77.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel77.setText("Mode of Payment :");

        records_class.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        records_class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FORM 1", "FORM 2", "FORM 3", "FORM 4" }));

        jLabel150.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel150.setText("CLASS :");

        jLabel157.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel157.setText("TERM :");

        records_term.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        records_term.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TERM I", "TERM II", "TERM III" }));

        records_mode.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        records_mode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "bank slip", "cheque" }));

        javax.swing.GroupLayout recordLayout = new javax.swing.GroupLayout(record);
        record.setLayout(recordLayout);
        recordLayout.setHorizontalGroup(
            recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator8)
            .addGroup(recordLayout.createSequentialGroup()
                .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(recordLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel46))
                    .addGroup(recordLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel150)
                            .addComponent(jLabel77)
                            .addComponent(jLabel157))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(records_class, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(records_term, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(records_mode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addComponent(view_records, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addComponent(jLabel73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tsum, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(recordLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        recordLayout.setVerticalGroup(
            recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel150, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(records_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel157)
                    .addComponent(records_term, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel77, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(recordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(view_records)
                        .addComponent(records_mode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel73)
                        .addComponent(tsum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        reportPane.add(record, "card10");

        jPanel7.setBackground(new java.awt.Color(204, 214, 223));

        jLabel158.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel158.setText("TERM :");

        records_term1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        records_term1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TERM I", "TERM II", "TERM III" }));

        view_records1.setBackground(new java.awt.Color(0, 0, 204));
        view_records1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        view_records1.setForeground(new java.awt.Color(255, 255, 255));
        view_records1.setText("SHOW REPORT");
        view_records1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_records1ActionPerformed(evt);
            }
        });

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel158)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(records_term1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(view_records1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel158, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(records_term1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(view_records1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout payreportLayout = new javax.swing.GroupLayout(payreport);
        payreport.setLayout(payreportLayout);
        payreportLayout.setHorizontalGroup(
            payreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        payreportLayout.setVerticalGroup(
            payreportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        reportPane.add(payreport, "card3");

        javax.swing.GroupLayout reportsLayout = new javax.swing.GroupLayout(reports);
        reports.setLayout(reportsLayout);
        reportsLayout.setHorizontalGroup(
            reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reportPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(header, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        reportsLayout.setVerticalGroup(
            reportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportsLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parent.add(reports, "card12");

        jPanel5.setBackground(new java.awt.Color(0, 51, 51));
        jPanel5.setPreferredSize(new java.awt.Dimension(1350, 45));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("SCHOOL FINANCE MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(397, 397, 397)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(460, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MainLayout = new javax.swing.GroupLayout(Main);
        Main.setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addComponent(sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1360, Short.MAX_VALUE)
            .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainLayout.createSequentialGroup()
                    .addContainerGap(199, Short.MAX_VALUE)
                    .addComponent(parent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(1, 1, 1)))
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainLayout.createSequentialGroup()
                    .addContainerGap(50, Short.MAX_VALUE)
                    .addComponent(parent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, 1360, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fee_paymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fee_paymentMouseClicked
        parent.removeAll();
        parent.add(payment);
        parent.repaint();
        parent.revalidate();
        generate_receiptNo();

    }//GEN-LAST:event_fee_paymentMouseClicked

    private void voteheadsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voteheadsMouseClicked
        parent.removeAll();
        parent.add(voteHeads);
        parent.repaint();
        parent.revalidate();
        show_voteheads();
    }//GEN-LAST:event_voteheadsMouseClicked

    private void structureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_structureMouseClicked
        parent.removeAll();
        parent.add(fee_structure);
        parent.repaint();
        parent.revalidate();
    }//GEN-LAST:event_structureMouseClicked

    private void adminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminMouseClicked
        parent.removeAll();
        parent.add(fee_entry);
        parent.repaint();
        parent.revalidate();
        show_fee();
    }//GEN-LAST:event_adminMouseClicked

    private void save_voteheadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_save_voteheadMouseClicked

    }//GEN-LAST:event_save_voteheadMouseClicked

    private void save_voteheadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_voteheadActionPerformed
        try {
            con = db.start();
            ps = con.prepareStatement("select * from voteheads where class_name='" + class_votehead.getSelectedItem() + "' and votehead='" + vote_head.getText() + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Record Exists");
            } else {
                ps = con.prepareStatement("INSERT INTO voteheads(class_name,votehead,term,amount,year) VALUES (?,?,?,?,?)");
                ps.setString(1, (String) class_votehead.getSelectedItem());
                ps.setString(2, vote_head.getText());

                ps.setString(3, (String) term_votehead.getSelectedItem());

                double amt = Double.parseDouble(term_amount.getText());
                ps.setDouble(4, amt);

                ps.setString(5, (String) votehead_year.getSelectedItem());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Saved to database");
                show_voteheads();
                term_amount.setText(null);

            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_save_voteheadActionPerformed

    private void delete_voteheadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_voteheadsActionPerformed
        int row = voteheads_table.getSelectedRow();
        String id = voteheads_table.getModel().getValueAt(row, 0).toString();
        try {
            con = db.start();
            ps = con.prepareStatement("delete from voteheads where id='" + id + "' ");
            ps.execute();
            JOptionPane.showMessageDialog(null, "Deleted Sucessfully");
            show_voteheads();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_delete_voteheadsActionPerformed

    private void class_structureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_class_structureActionPerformed

    }//GEN-LAST:event_class_structureActionPerformed

    private void view_structureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_structureActionPerformed
        try {
            con = db.start();
            LocalDate d = LocalDate.now();
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream("fee_structure.pdf"));
            document.open();
            Paragraph paragraph1 = new Paragraph();
            paragraph1.add(new Paragraph("MINISTRY OF EDUCATION SCIENCE AND TECHNOLOGY", FontFactory.getFont(FontFactory.TIMES_ROMAN, 15, Font.BOLD, BaseColor.BLACK)));
            paragraph1.add(new Paragraph("DEMO SECONDARY SCHOOL", FontFactory.getFont(FontFactory.TIMES_ROMAN, 15, Font.BOLD, BaseColor.BLACK)));
            paragraph1.add(new Paragraph("P.O BOX 503, DEMO", FontFactory.getFont(FontFactory.TIMES_ROMAN, 15, Font.BOLD, BaseColor.BLACK)));
            paragraph1.add(new Paragraph(d.toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK)));
            paragraph1.add(new Paragraph("\n"));
            paragraph1.add(new Paragraph("FEE STRUCTURE", FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK)));

            paragraph1.add(new Paragraph(class_structure.getSelectedItem() + " " + term_structure.getSelectedItem() + "", FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK)));
            paragraph1.setAlignment(Element.ALIGN_CENTER);
            document.add(paragraph1);
            ps = con.prepareStatement("select votehead,amount from voteheads where class_name='" + class_structure.getSelectedItem() + "' and term='" + term_structure.getSelectedItem() + "'");
            rs = ps.executeQuery();

            ps1 = con.prepareStatement("select amount from voteheads where class_name='" + class_structure.getSelectedItem() + "' and term='TERM II'");
            rs1 = ps1.executeQuery();

            ps2 = con.prepareStatement("select amount from voteheads where class_name='" + class_structure.getSelectedItem() + "' ");
            rs2 = ps2.executeQuery();

            ps3 = con.prepareStatement("select amount from voteheads where class_name='" + class_structure.getSelectedItem() + "' and term='TERM III'");
            rs3 = ps3.executeQuery();

            PdfPTable table = new PdfPTable(2);
//            table.setWidths(new int[]{7,7,7,7,7});
            PdfPCell votehead = new PdfPCell(new Paragraph("VOTEHEAD"));
            PdfPCell term1 = new PdfPCell(new Paragraph("AMOUNT (KSHS)"));
//            PdfPCell term2 = new PdfPCell(new Paragraph("TERM II (KSHS)"));
//            PdfPCell term3 = new PdfPCell(new Paragraph("TERM III (KSHS)"));
//            PdfPCell total = new PdfPCell(new Paragraph("TOTAL (KSHS)"));
            table.addCell(votehead);
            table.addCell(term1);
//            table.addCell(term2);
//            table.addCell(term3);
//            table.addCell(total); 
            while (rs.next()) {
                table.addCell(rs.getString("votehead"));
                table.addCell(rs.getString("amount"));
//            table.addCell(rs1.getString("amount")); 
//            table.addCell(rs1.getString("amount")); 
//            table.addCell(rs1.getString("amount")); 
            }

            document.add(table);
            PdfPTable table1 = new PdfPTable(2);
            PdfPCell total1 = new PdfPCell(new Paragraph("Total"));
            PdfPCell tt1 = new PdfPCell(new Paragraph(""));

            ps = con.prepareStatement("select sum(amount) from voteheads where class_name='" + class_structure.getSelectedItem() + "' and term='" + term_structure.getSelectedItem() + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                table1.addCell(total1);
                table1.addCell(rs.getString("sum(amount)"));
            }
            document.add(table1);
            document.close();
            String path = "fee_structure.pdf";
            SwingController control = new SwingController();
            SwingViewBuilder factory = new SwingViewBuilder(control);
            JPanel viewercomponent = factory.buildViewerPanel();
            ComponentKeyBinding.install(control, viewercomponent);
            control.getDocumentViewController().setAnnotationCallback(
                    new org.icepdf.ri.common.MyAnnotationCallback(
                            control.getDocumentViewController()
                    )
            );
            control.openDocument(path);
            jScrollPane10.setViewportView(viewercomponent);
        } catch (SQLException | FileNotFoundException | DocumentException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_view_structureActionPerformed

    private void student_idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_student_idKeyTyped
//        char ch = evt.getKeyChar();
//        if(!Character.isDigit(ch)){
//            evt.consume();
//            JOptionPane.showMessageDialog(this,"Only numeric values!");
//        }
    }//GEN-LAST:event_student_idKeyTyped

    private void student_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_student_nameActionPerformed

    private void student_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_student_nameKeyTyped
        char ch = evt.getKeyChar();
        if (Character.isDigit(ch)) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Please don't give numeric values");
        }
    }//GEN-LAST:event_student_nameKeyTyped

    private void add_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_studentActionPerformed
        //validate fields        
        if (student_id.getText().isEmpty() | student_name.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "One or More fields are Empty!");
        } else {
            try {
                con = db.start();
                ps = con.prepareStatement("select * from students where admno='" + student_id.getText() + "'");
                rs = ps.executeQuery();
                if (rs.next() == true) {
                    JOptionPane.showMessageDialog(null, "Student Already Exists!");
                } else {
                    ps = con.prepareStatement("INSERT INTO students(admno,name,class_name,stream,year) VALUES (?,?,?,?,?)");
                    ps.setString(1, student_id.getText());
                    ps.setString(2, student_name.getText());
                    ps.setString(3, (String) class_name.getSelectedItem());
                    ps.setString(4, (String) stream_name.getSelectedItem());
                    ps.setString(5, (String) combo_year.getSelectedItem());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Student Added Successfully");
                    ps1 = con.prepareStatement("select coalesce(sum(fee_amount),0) from fees where class_name='" + class_name.getSelectedItem() + "'");
                    rs1 = ps1.executeQuery();
                    while (rs1.next()) {
                        String stud_bal = rs1.getString("coalesce(sum(fee_amount),0)");
                        ps = con.prepareStatement("update students set fee_balance='" + stud_bal + "' where admno='" + student_id.getText() + "'");
                        ps.executeUpdate();
                    }
                    show_students();
                    student_id.setText("");
                    student_name.setText("");
                    class_name.setSelectedIndex(0);
                    stream_name.setSelectedIndex(0);
                    fee_balance.setText("");
                    combo_year.setSelectedIndex(0);

                }

            } catch (SQLException ev) {
                JOptionPane.showMessageDialog(null, ev.getMessage());
            }
            student_id.setText(null);
            student_name.setText(null);
        }
    }//GEN-LAST:event_add_studentActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            con = db.start();
            String UpdateQuery = "UPDATE students SET name=?,class_name=?,stream=?,fee_balance=?,year=? where  admno=?";
            ps = con.prepareStatement(UpdateQuery);
            ps.setString(1, student_name.getText());
            ps.setString(2, (String) class_name.getSelectedItem());
            ps.setString(3, (String) stream_name.getSelectedItem());
            ps.setString(4, fee_balance.getText());
            ps.setString(5, (String) combo_year.getSelectedItem());
            ps.setInt(6, parseInt(student_id.getText()));
            ps.executeUpdate();
            show_students();
            JOptionPane.showMessageDialog(null, "Updated Successfully!");
            student_id.setText("");
            student_name.setText("");
            fee_balance.setText("");
            class_name.setSelectedIndex(0);
            stream_name.setSelectedIndex(0);
            combo_year.setSelectedIndex(0);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_jButton3ActionPerformed
    public void show_students() {

        try {
            con = db.start();
            ps = con.prepareStatement("SELECT * from students order by class_name");
            rs = ps.executeQuery();
            students_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        generate_receiptNo();
        try {
            con = db.start();
            ps = con.prepareStatement("select name,students.class_name,stream,coalesce(sum(amount_paid),0) from students inner join payments on students.admno=payments.admno where students.admno='" + admno.getText() + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                name.setText(rs.getString("name"));
                className.setText(rs.getString("class_name"));
                stream.setText(rs.getString("stream"));
                acc_credits.setText(rs.getString("coalesce(sum(amount_paid),0)"));
                ps1 = con.prepareStatement("select fee_amount from fees where term ='" + term.getSelectedItem() + "' and class_name='" + className.getText() + "'");
                rs1 = ps1.executeQuery();
                if (rs1.next()) {
                    termFee.setText(rs1.getString("fee_amount"));
                }
                ps2 = con.prepareStatement("select coalesce(sum(fee_amount),0) from fees where class_name='" + className.getText() + "'");
                rs2 = ps2.executeQuery();
                while (rs2.next()) {
                    acc_debits.setText(rs2.getString("coalesce(sum(fee_amount),0)"));
                }
                String total_debits = acc_debits.getText();
                int debits = Integer.parseInt(total_debits);
                String total_credits = acc_credits.getText();
                int credits = Integer.parseInt(total_credits);
                int acc_bal = debits - credits;
                ps = con.prepareStatement("update students set fee_balance='" + acc_bal + "' where admno='" + admno.getText() + "'");
                ps.executeUpdate();
                ps3 = con.prepareStatement("select fee_balance from students where admno='" + admno.getText() + "'");
                rs3 = ps3.executeQuery();
                if (rs3.next()) {
                    balance.setText(rs3.getString("fee_balance"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
        show_pay_records();
    }//GEN-LAST:event_searchActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if (admno.getText().isEmpty() | amount_paid.getText().isEmpty() | amount_in_words.getText().isEmpty()
                | mode_of_payment.getSelectedIndex() == 0 | payment_code.getText().isEmpty() | receipt_no.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "One or More fields is Empty!");

        } else {
            try {
                con = db.start();
                ps = con.prepareStatement("select fee_balance from students where admno='" + admno.getText() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    String stud_fee_balance = rs.getString("fee_balance");
                    int var = Integer.parseInt(stud_fee_balance);
                    String stud_balance = amount_paid.getText();
                    int var1 = Integer.parseInt(stud_balance);
                    int studBalance = var - var1;
                    String bala = Integer.toString(studBalance);
                    ps = con.prepareStatement("INSERT INTO payments(admno,class_name,term,amount_paid,amount_in_words, mode_of_payment,payment_code, date_of_payment,"
                            + " notes, receipt_no,balance) VALUES (?,?,?,?,?,?,?,?,?,?,?)");
                    ps.setString(1, admno.getText());
                    ps.setString(2, className.getText());
                    ps.setString(3, (String) term.getSelectedItem());
                    ps.setString(4, amount_paid.getText());
                    ps.setString(5, amount_in_words.getText());
                    ps.setString(6, (String) mode_of_payment.getSelectedItem());
                    ps.setString(7, payment_code.getText());

                    java.util.Date javadate = pay_date.getDate();
                    java.sql.Date sqldate = new java.sql.Date(javadate.getTime());

                    ps.setString(8, sqldate.toString());
                    ps.setString(9, notes.getText());
                    ps.setString(10, receipt_no.getText());
                    ps.setString(11, bala);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Payment Successful");
                    show_pay_records();
                    show_receipt();
                    reduce_fee_balance();
                    ps1 = con.prepareStatement("insert into statement(admno,Date,Document_Type,Ref,Description,Credit_Paid,Balance) values(?,?,?,?,?,?,?)");
                    ps1.setString(1, admno.getText());
                    ps1.setString(2, sqldate.toString());
                    ps1.setString(3, (String) mode_of_payment.getSelectedItem());
                    ps1.setString(4, payment_code.getText());
                    ps1.setString(5, notes.getText());
                    ps1.setString(6, amount_paid.getText());
                    ps1.setString(7, bala);
                    ps1.executeUpdate();
                    amount_paid.setText(null);
                    amount_in_words.setText(null);
                    mode_of_payment.setSelectedIndex(0);
                    pay_date.setDate(null);
                    payment_code.setText(null);
                    notes.setText(null);
                    receipt_no.setText(null);
                    generate_receiptNo();

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    //method to reduce student fee balance after payment
    private void reduce_fee_balance() {
        try {
            con = db.start();
            ps = con.prepareStatement("select fee_balance from students where admno='" + admno.getText() + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                String db_bal = rs.getString("fee_balance");
                int balan = Integer.parseInt(db_bal);
                int amount = Integer.parseInt(amount_paid.getText());
                int new_bal = balan - amount;
                ps = con.prepareStatement("update students set fee_balance ='" + new_bal + "' where admno='" + admno.getText() + "'");
                ps.executeUpdate();
                ps1 = con.prepareStatement("select fee_balance from students where admno='" + admno.getText() + "'");
                ps2 = con.prepareStatement("select sum(amount_paid) from payments where admno='" + admno.getText() + "'");
                rs1 = ps1.executeQuery();
                rs2 = ps2.executeQuery();
                while (rs1.next() && rs2.next()) {
                    balance.setText(rs1.getString("fee_balance"));
                    acc_credits.setText(rs2.getString("sum(amount_paid)"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void enter_feeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enter_feeActionPerformed
        if (fee_amount.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "FEE AMOUNT is Empty!");
        } else if (class_fee.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Select a Valid Class!");
        } else {
            try {
                con = db.start();
                ps = con.prepareStatement("select * from fees where class_name='" + class_fee.getSelectedItem() + "' and term='" + term_fee.getSelectedItem() + "' and year='" + fee_year.getSelectedItem() + "'");
                rs = ps.executeQuery();
                if (rs.next() == true) {
                    JOptionPane.showMessageDialog(null, "Record Already Exists!");
                } else {
                    ps = con.prepareStatement("insert into fees(class_name,term,fee_amount,year) values(?,?,?,?) ");
                    ps.setString(1, (String) class_fee.getSelectedItem());
                    ps.setString(2, (String) term_fee.getSelectedItem());
                    ps.setString(3, fee_amount.getText());
                    long millis = System.currentTimeMillis();
                    java.sql.Date sqldate = new java.sql.Date(millis);
                    ps.setString(4, (String) fee_year.getSelectedItem());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Fees added Successfully");

                    update_balance();//updates student fee balance after entering new fees

                    show_fee();//shows fee entered on the jtable

                    ps1 = con.prepareStatement("select admno,fee_balance from students where class_name='" + class_fee.getSelectedItem() + "'");
                    rs1 = ps1.executeQuery();
                    while (rs1.next()) {
                        String adm = rs1.getString("admno");
                        String fee_bal = rs1.getString("fee_balance");
                        ps = con.prepareStatement("insert into statement(admno,Date,Document_Type,Ref,Description,Debit_Expected,Balance) values(?,?,?,?,?,?,?)");
                        ps.setString(1, adm);
                        ps.setString(2, sqldate.toString());
                        String Document_Type = "INVOICE(" + term_fee.getSelectedItem() + ")";
                        ps.setString(3, Document_Type);
                        String inv = "INV" + new SimpleDateFormat("yyyy/MM/dd").format(sqldate) + 1;
                        ps.setString(4, inv);
                        String description = "Being fees for" + class_fee.getSelectedItem() + "" + term_fee.getSelectedItem();
                        ps.setString(5, description);
                        ps.setString(6, fee_amount.getText());
                        ps.setString(7, fee_bal);
                        ps.executeUpdate();
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_enter_feeActionPerformed

    private void searchNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchNameMouseClicked
        generate_receiptNo();
        try {
            con = db.start();
            ps = con.prepareStatement("select students.admno,class_name,stream,coalesce(sum(amount_paid),0) from students,payments where students.admno=payments.admno and students.name='" + name.getText() + "'");
            rs = ps.executeQuery();
            while (rs.next()) {
                admno.setText(rs.getString("students.admno"));
                className.setText(rs.getString("class_name"));
                stream.setText(rs.getString("stream"));
                acc_credits.setText(rs.getString("coalesce(sum(amount_paid),0)"));
                ps1 = con.prepareStatement("select fee_amount from fees where term ='" + term.getSelectedItem() + "' and class_name='" + className.getText() + "'");
                rs1 = ps1.executeQuery();
                if (rs1.next()) {
                    termFee.setText(rs1.getString("fee_amount"));
                }
                ps2 = con.prepareStatement("select coalesce(sum(fee_amount),0) from fees where class_name='" + className.getText() + "'");
                rs2 = ps2.executeQuery();
                while (rs2.next()) {
                    acc_debits.setText(rs2.getString("coalesce(sum(fee_amount),0)"));
                }
                String total_debits = acc_debits.getText();
                int debits = Integer.parseInt(total_debits);
                String total_credits = acc_credits.getText();
                int credits = Integer.parseInt(total_credits);
                int acc_bal = debits - credits;
                ps = con.prepareStatement("update students set fee_balance='" + acc_bal + "' where admno='" + admno.getText() + "'");
                ps.executeUpdate();
                ps3 = con.prepareStatement("select fee_balance from students where admno='" + admno.getText() + "'");
                rs3 = ps3.executeQuery();
                if (rs3.next()) {
                    balance.setText(rs3.getString("fee_balance"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
        show_pay_records();
    }//GEN-LAST:event_searchNameMouseClicked

    private void balancesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_balancesMouseClicked
        parent.removeAll();
        parent.add(balancespanel);
        parent.repaint();
        parent.revalidate();
    }//GEN-LAST:event_balancesMouseClicked

    private void class_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_class_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_class_nameActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        main.removeAll();
        main.add(balanc);
        main.repaint();
        main.revalidate();
        try {
            con = db.start();
            if (class_fee_balance.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "No Selected Class!");
            } else {
                ps = con.prepareStatement("select admno as 'ADMNO',name as 'NAME',fee_balance as 'BALANCE' from students where class_name='" + class_fee_balance.getSelectedItem() + "' and fee_balance>0");
                rs = ps.executeQuery();
                balance_table.setModel(DbUtils.resultSetToTableModel(rs));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void amount_paidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amount_paidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amount_paidActionPerformed

    private void students_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_students_tableMouseClicked
        fee_balance.setVisible(true);
        fee_balance_label.setVisible(true);
        int row = students_table.getSelectedRow();
        String tc = students_table.getModel().getValueAt(row, 0).toString();
        try {
            con = db.start();
            ps = con.prepareStatement("select * from students where admno='" + tc + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                student_id.setText(rs.getString("admno"));
                student_name.setText(rs.getString("name"));
                class_name.setSelectedItem(rs.getString("class_name"));
                stream_name.setSelectedItem(rs.getString("stream"));
                fee_balance.setText(rs.getString("fee_balance"));
                combo_year.setSelectedItem(rs.getString("year"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_students_tableMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            con = db.start();
            String sql = "delete from students where admno = ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, student_id.getText());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Student Deleted");
            show_students();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        student_id.setText("");
        student_name.setText("");
        class_name.setSelectedIndex(0);
        stream_name.setSelectedIndex(0);
        fee_balance.setText("");
        combo_year.setSelectedIndex(0);
    }//GEN-LAST:event_deleteActionPerformed

    private void update_votejeadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_votejeadActionPerformed
        int row = voteheads_table.getSelectedRow();
        String sno = voteheads_table.getModel().getValueAt(row, 0).toString();
        try {
            con = db.start();
            ps = con.prepareStatement("update voteheads set class_name=?,votehead=?,term=?,amount=?,year=? where id='" + sno + "'");
            ps.setString(1, (String) class_votehead.getSelectedItem());
            ps.setString(2, vote_head.getText());

            ps.setString(3, (String) term_votehead.getSelectedItem());
            ps.setString(4, term_amount.getText());
            ps.setString(5, (String) votehead_year.getSelectedItem());
            ps.executeUpdate();
            show_voteheads();
            JOptionPane.showMessageDialog(null, "Updated");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_update_votejeadActionPerformed

    private void voteheads_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voteheads_tableMouseClicked
        int row = voteheads_table.getSelectedRow();
        String votehead = voteheads_table.getModel().getValueAt(row, 0).toString();
        try {
            con = db.start();
            ps = con.prepareStatement("select * from voteheads where id='" + votehead + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                vote_head.setText(rs.getString("votehead"));
                class_votehead.setSelectedItem(rs.getString("class_name"));
                term_amount.setText(rs.getString("amount"));
                term_votehead.setSelectedItem(rs.getString("term"));
                votehead_year.setSelectedItem(rs.getString("year"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_voteheads_tableMouseClicked

    private void update_feeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_feeActionPerformed
        int row = fees_table.getSelectedRow();
        String ft = fees_table.getModel().getValueAt(row, 0).toString();
        try {
            con = db.start();
            String UpdateQuery = "update fees set class_name=?,term=?,fee_amount=?,year=? where  id='" + ft + "'";
            ps = con.prepareStatement(UpdateQuery);
            ps.setString(1, (String) class_fee.getSelectedItem());
            ps.setString(2, (String) term_fee.getSelectedItem());
            ps.setString(3, fee_amount.getText());
            ps.setString(4, (String) fee_year.getSelectedItem());
            ps.executeUpdate();
            show_fee();
            JOptionPane.showMessageDialog(null, "Updated Successfully!");
            class_fee.setSelectedIndex(0);
            //term_fee.setSelectedIndex(0);
            fee_amount.setText("");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_update_feeActionPerformed

    private void fees_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fees_tableMouseClicked
        int row = fees_table.getSelectedRow();
        String ft = fees_table.getModel().getValueAt(row, 0).toString();
        try {
            con = db.start();
            ps = con.prepareStatement("select * from fees where id='" + ft + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                class_fee.setSelectedItem(rs.getString("class_name"));
                term_fee.setSelectedItem(rs.getString("term"));
                fee_amount.setText(rs.getString("fee_amount"));
                fee_year.setSelectedItem(rs.getString("year"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fees_tableMouseClicked

    private void search_studentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_studentMouseClicked
        search_student.setText("");
    }//GEN-LAST:event_search_studentMouseClicked

    private void recordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordsMouseClicked
        parent.removeAll();
        parent.add(reports);
        parent.repaint();
        parent.revalidate();
    }//GEN-LAST:event_recordsMouseClicked

    private void receiptsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiptsActionPerformed
        try {
            show_receipt();
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_receiptsActionPerformed
    //generates receipt after payment
    private void show_receipt() throws SQLException {
        try {
            Document doc = new Document(PageSize.A5);

            PdfWriter.getInstance(doc, new FileOutputStream("receipt.pdf"));
            doc.open();

            Paragraph para = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK));
            para.add(new Paragraph("MINISTRY OF EDUCATION SCIENCE AND TECHNOLOGY"));
            para.add(new Paragraph("DEMO SCHOOL"));
            para.add(new Paragraph("P.O BOX 3 -NAIROBI"));
            para.add(new Paragraph(""));
            para.add(new Paragraph("OFFICIAL RECEIPT"));
            para.add(new Paragraph(""));
            para.setAlignment(Element.ALIGN_CENTER);
            doc.add(para);

            con = db.start();
            ps = con.prepareStatement("SELECT * FROM `payments` WHERE pay_id=(select max(pay_id) from payments) and  Admno='" + admno.getText() + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                Paragraph para1 = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK));
                SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
                para1.add(new Paragraph("DATE : " + rs.getString("date_of_payment") + "                                         " + "RECEIPT NO : " + rs.getString("receipt_no")));
                para1.add(new Paragraph(""));
                para1.add(new Paragraph(""));
                doc.add(para1);

                Paragraph para2 = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD));
                para2.add(new Paragraph("Received  from  " + name.getText() + "  " + "Admno  " + admno.getText() + "  in  " + className.getText() + "  " + stream.getText() + "  (Amount in words)  "
                        + "  " + rs.getString("amount_in_words")));
                para2.add(new Paragraph(""));
                para2.add(new Paragraph("Amount Paid :Ksh. " + rs.getString("amount_paid")));
                para2.add(new Paragraph("Mode :" + rs.getString("mode_of_payment")));
                para2.add(new Paragraph("Fee Balance :Ksh. " + rs.getString("balance")));
                doc.add(para2);
            }
            Paragraph para3 = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD));
            para3.setAlignment(Element.ALIGN_RIGHT);
            para3.add(new Paragraph("_________________"));
            para3.add(new Paragraph("Signature"));
            para3.add(new Paragraph(""));
            para3.add(new Paragraph(""));
            para3.add(new Paragraph("_________________"));
            para3.add(new Paragraph("Official Stamp"));
            doc.add(para3);

            doc.close();

            //Display the document in the jscrollpane
            SwingController control = new SwingController();
            SwingViewBuilder factory = new SwingViewBuilder(control);
            JPanel viewercomponent = factory.buildViewerPanel();
            ComponentKeyBinding.install(control, viewercomponent);
            control.getDocumentViewController().setAnnotationCallback(
                    new org.icepdf.ri.common.MyAnnotationCallback(
                            control.getDocumentViewController()
                    )
            );
            control.openDocument("receipt.pdf");
            jScrollPane11.setViewportView(viewercomponent);
            jScrollPane11.setVisible(true);
        } catch (DocumentException | FileNotFoundException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //method to create balance slip
    public void balance_slip() {
        try {
            con = db.start();
            Document doc = new Document();
            PdfWriter.getInstance(doc, new FileOutputStream("balance_slip.pdf"));
            doc.open();

            if (class_fee_balance.getSelectedIndex() == 1) {

                ps = con.prepareStatement("select * from students where fee_balance>0 and class_name='" + class_fee_balance.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {

                    //Create new paragraph
                    Paragraph para = new Paragraph();
                    para.add(new Paragraph("DEMO SECONDARY SCHOOL"));
                    para.add(new Paragraph("P.O BOX 503, KITUI"));
                    para.setAlignment(Element.ALIGN_CENTER);
                    para.add(new Paragraph(""));

                    doc.add(para);
                    Paragraph para1 = new Paragraph();

                    para1.add(new Paragraph("Dear Parent/Gurdian your son " + rs.getString("name") + "  ADMNO:" + rs.getString("admno") + "  Class:" + rs.getString("class_name") + " " + rs.getString("Stream") + "  has been sent home to collect fee balance of:" + rs.getString("fee_balance") + ". "));
                    para1.add(new Paragraph("__________________________________________________________________________"));
                    para1.add(new Paragraph(""));
                    doc.add(para1);

                }
            } else if (class_fee_balance.getSelectedIndex() == 2) {

                ps = con.prepareStatement("select * from students where fee_balance>0 and class_name='" + class_fee_balance.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {

                    //Create new paragraph
                    Paragraph para = new Paragraph();
                    para.add(new Paragraph("DEMO SECONDARY SCHOOL"));
                    para.add(new Paragraph("P.O BOX 503, KITUI"));
                    para.setAlignment(Element.ALIGN_CENTER);
                    para.add(new Paragraph(""));

                    doc.add(para);
                    Paragraph para1 = new Paragraph();

                    para1.add(new Paragraph("Dear Parent/Gurdian your son " + rs.getString("name") + "  ADMNO:" + rs.getString("admno") + "  Class:" + rs.getString("class_name") + " " + rs.getString("Stream") + "  has been sent home to collect fee balance of:" + rs.getString("fee_balance") + ". "));
                    para1.add(new Paragraph("__________________________________________________________________________"));
                    para1.add(new Paragraph(""));
                    doc.add(para1);

                }
            }
            if (class_fee_balance.getSelectedIndex() == 3) {

                ps = con.prepareStatement("select * from students where fee_balance>0 and class_name='" + class_fee_balance.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {

                    //Create new paragraph
                    Paragraph para = new Paragraph();
                    para.add(new Paragraph("DEMO SECONDARY SCHOOL"));
                    para.add(new Paragraph("P.O BOX 503, KITUI"));
                    para.setAlignment(Element.ALIGN_CENTER);
                    para.add(new Paragraph(""));

                    doc.add(para);
                    Paragraph para1 = new Paragraph();

                    para1.add(new Paragraph("Dear Parent/Gurdian your son " + rs.getString("name") + "  ADMNO:" + rs.getString("admno") + "  Class:" + rs.getString("class_name") + " " + rs.getString("Stream") + "  has been sent home to collect fee balance of:" + rs.getString("fee_balance") + ". "));
                    para1.add(new Paragraph("__________________________________________________________________________"));
                    para1.add(new Paragraph(""));
                    doc.add(para1);

                }
            }
            if (class_fee_balance.getSelectedIndex() == 4) {

                ps = con.prepareStatement("select * from students where fee_balance>0 and class_name='" + class_fee_balance.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {

                    //Create new paragraph
                    Paragraph para = new Paragraph();
                    para.add(new Paragraph("DEMO SECONDARY SCHOOL"));
                    para.add(new Paragraph("P.O BOX 503, KITUI"));
                    para.setAlignment(Element.ALIGN_CENTER);
                    para.add(new Paragraph(""));

                    doc.add(para);
                    Paragraph para1 = new Paragraph();

                    para1.add(new Paragraph("Dear Parent/Gurdian your son " + rs.getString("name") + "  ADMNO:" + rs.getString("admno") + "  Class:" + rs.getString("class_name") + " " + rs.getString("Stream") + "  has been sent home to collect fee balance of:" + rs.getString("fee_balance") + ". "));
                    para1.add(new Paragraph("__________________________________________________________________________"));
                    para1.add(new Paragraph(""));
                    doc.add(para1);

                }
            } else {

            }

            doc.close();
            //Display the document in the jscrollpane
            SwingController control = new SwingController();
            SwingViewBuilder factory = new SwingViewBuilder(control);
            JPanel viewercomponent = factory.buildViewerPanel();
            ComponentKeyBinding.install(control, viewercomponent);
            control.getDocumentViewController().setAnnotationCallback(
                    new org.icepdf.ri.common.MyAnnotationCallback(
                            control.getDocumentViewController()
                    )
            );
            control.openDocument("balance_slip.pdf");
            reportPanel.setViewportView(viewercomponent);
            reportPanel.setVisible(true);
        } catch (FileNotFoundException | DocumentException | SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void generate_notesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_notesActionPerformed
        main.removeAll();
        main.add(reportPanel);
        main.repaint();
        main.revalidate();
        balance_slip();
    }//GEN-LAST:event_generate_notesActionPerformed

    private void view_recordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_recordsActionPerformed
        try {
            con = db.start();
            ps = con.prepareStatement("select * from payments where class_name='" + records_class.getSelectedItem() + "' AND term='" + records_term.getSelectedItem() + "' AND mode_of_payment='" + records_mode.getSelectedItem() + "'");
            rs = ps.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));

            tsum.setText(Double.toString(getSum()));
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_view_recordsActionPerformed

    private void feeStatementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feeStatementActionPerformed
        try {
            con = db.start();
            LocalDate d = LocalDate.now();
            JFileChooser dialog = new JFileChooser();
            dialog.setSelectedFile(new File(name.getText() + "-fee statement.pdf"));
            int dialogResult = dialog.showSaveDialog(null);
            if (dialogResult == JFileChooser.APPROVE_OPTION) {
                String filePath = dialog.getSelectedFile().getPath();
                Document document = new Document();
                PdfWriter.getInstance(document, new FileOutputStream(filePath));
                document.open();

                //Image image = Image.SCALE_DEFAULT
                //image.setAlignment(Element.ALIGN_LEFT);
                //document.add(image);
                Paragraph paragraph = new Paragraph("MINISTRY OF EDUCATION SCIENCE AND TECHNOLOGY", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK));
                paragraph.setAlignment(Element.ALIGN_CENTER);
                document.add(paragraph);
                Paragraph paragraph1 = new Paragraph("DEMO SECONDARY SCHOOL", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK));
                paragraph1.setAlignment(Element.ALIGN_CENTER);
                document.add(paragraph1);
                Paragraph paragraph2 = new Paragraph("P.O BOX 503, DEMO", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK));
                paragraph2.setAlignment(Element.ALIGN_CENTER);
                document.add(paragraph2);
                Paragraph paragraph3 = new Paragraph(d.toString(), FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK));
                paragraph3.setAlignment(Element.ALIGN_CENTER);
                document.add(paragraph3);
                document.add(new Paragraph("\n"));
                ps = con.prepareStatement("select * from students where admno='" + admno.getText() + "'");
                rs = ps.executeQuery();
                PdfPTable table1 = new PdfPTable(4);
                //table1.setWidths(new int[]{3,2,1,2});
                PdfPCell stud_name = new PdfPCell(new Paragraph("STUDENT NAME"));
                PdfPCell stud_admno = new PdfPCell(new Paragraph("ADMNO"));
                PdfPCell stud_class = new PdfPCell(new Paragraph("CLASS"));
                PdfPCell stud_stream = new PdfPCell(new Paragraph("STREAM"));
                while (rs.next()) {
                    table1.addCell(stud_name);
                    table1.addCell(rs.getString("name"));
                    table1.addCell(stud_admno);
                    table1.addCell(rs.getString("admno"));
                    table1.addCell(stud_class);
                    table1.addCell(rs.getString("class_name"));
                    table1.addCell(stud_stream);
                    table1.addCell(rs.getString("stream"));
                }
                document.add(table1);

                document.add(new Paragraph("\n"));
                Paragraph pa = new Paragraph("FEE STATEMENT", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK));
                pa.setAlignment(Element.ALIGN_CENTER);
                document.add(pa);
                document.add(new Paragraph("\n"));
                PdfPTable table = new PdfPTable(7);
                //table.setWidths(new int[]{3,2,1,2});
                ps1 = con.prepareStatement("select Date,Document_Type,Ref,Description,Debit_Expected,Credit_Paid,Balance from statement where admno='" + admno.getText() + "'");
                rs1 = ps1.executeQuery();
                PdfPCell dat = new PdfPCell(new Paragraph("Date"));
                PdfPCell doc = new PdfPCell(new Paragraph("Document Type"));
                PdfPCell ref = new PdfPCell(new Paragraph("Ref"));
                PdfPCell desc = new PdfPCell(new Paragraph("Description"));
                PdfPCell debit = new PdfPCell(new Paragraph("Debit(Expected)"));
                PdfPCell credit = new PdfPCell(new Paragraph("Credit(Paid)"));
                PdfPCell student_balance = new PdfPCell(new Paragraph("Balance"));
                table.addCell(dat);
                table.addCell(doc);
                table.addCell(ref);
                table.addCell(desc);
                table.addCell(debit);
                table.addCell(credit);
                table.addCell(student_balance);
                while (rs1.next()) {
                    table.addCell(rs1.getString("Date"));
                    table.addCell(rs1.getString("Document_Type"));
                    table.addCell(rs1.getString("Ref"));
                    table.addCell(rs1.getString("Description"));
                    table.addCell(rs1.getString("Debit_Expected"));
                    table.addCell(rs1.getString("Credit_Paid"));
                    table.addCell(rs1.getString("Balance"));
                }
                document.add(table);
                document.close();
                JOptionPane.showMessageDialog(null, "Saved successfully");
            }
        } catch (DocumentException | HeadlessException | FileNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_feeStatementActionPerformed

    private void payments_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payments_tableMouseClicked
        int row = payments_table.getSelectedRow();
        String tc = payments_table.getModel().getValueAt(row, 1).toString();
        try {
            Document doc = new Document(PageSize.A5);

            PdfWriter.getInstance(doc, new FileOutputStream("receipt.pdf"));
            doc.open();

            Paragraph para = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK));
            para.add(new Paragraph("MINISTRY OF EDUCATION SCIENCE AND TECHNOLOGY"));
            para.add(new Paragraph("DEMO SCHOOL"));
            para.add(new Paragraph("P.O BOX 3 -NAIROBI"));
            para.add(new Paragraph(""));
            para.add(new Paragraph("OFFICIAL RECEIPT"));
            para.add(new Paragraph(""));
            para.setAlignment(Element.ALIGN_CENTER);
            doc.add(para);

            con = db.start();
            ps = con.prepareStatement("SELECT * FROM payments WHERE receipt_no='" + tc + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                Paragraph para1 = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK));
                SimpleDateFormat sdf = new SimpleDateFormat("MMM d, yyyy");
                para1.add(new Paragraph("DATE : " + rs.getString("date_of_payment") + "                                         " + "RECEIPT NO : " + rs.getString("receipt_no")));
                para1.add(new Paragraph(""));
                para1.add(new Paragraph(""));
                doc.add(para1);

                Paragraph para2 = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD));
                para2.add(new Paragraph("Received  from  " + name.getText() + "  " + "Admno  " + admno.getText() + "  in  " + className.getText() + "  " + stream.getText() + "  (Amount in words)  "
                        + "  " + rs.getString("amount_in_words")));
                para2.add(new Paragraph(""));
                para2.add(new Paragraph("Amount Paid :Ksh. " + rs.getString("amount_paid")));
                para2.add(new Paragraph("Mode :" + rs.getString("mode_of_payment")));
                para2.add(new Paragraph("Fee Balance :Ksh. " + rs.getString("balance")));
                doc.add(para2);
            }
            Paragraph para3 = new Paragraph("", FontFactory.getFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD));
            para3.setAlignment(Element.ALIGN_RIGHT);
            para3.add(new Paragraph("_________________"));
            para3.add(new Paragraph("Signature"));
            para3.add(new Paragraph(""));
            para3.add(new Paragraph(""));
            para3.add(new Paragraph("_________________"));
            para3.add(new Paragraph("Official Stamp"));
            doc.add(para3);

            doc.close();

            //Display the document in the jscrollpane
            SwingController control = new SwingController();
            SwingViewBuilder factory = new SwingViewBuilder(control);
            JPanel viewercomponent = factory.buildViewerPanel();
            ComponentKeyBinding.install(control, viewercomponent);
            control.getDocumentViewController().setAnnotationCallback(
                    new org.icepdf.ri.common.MyAnnotationCallback(
                            control.getDocumentViewController()
                    )
            );
            control.openDocument("receipt.pdf");
            jScrollPane11.setViewportView(viewercomponent);
            jScrollPane11.setVisible(true);
        } catch (DocumentException | FileNotFoundException | SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_payments_tableMouseClicked

    private void term_amountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_term_amountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_term_amountKeyTyped

    private void jLabel53MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel53MouseClicked
        main_students.removeAll();
        main_students.add(manage_students);
        main_students.repaint();
        main_students.revalidate();
        fee_balance_label.setVisible(false);
        fee_balance.setVisible(false);
        show_students();
    }//GEN-LAST:event_jLabel53MouseClicked

    private void jLabel54MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel54MouseClicked
        main_students.removeAll();
        main_students.add(move_students);
        main_students.repaint();
        main_students.revalidate();
    }//GEN-LAST:event_jLabel54MouseClicked

    private void jLabel48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel48MouseClicked
        parent.removeAll();
        parent.add(students);
        parent.repaint();
        parent.revalidate();
        show_students();
        fee_balance_label.setVisible(false);
        fee_balance.setVisible(false);
    }//GEN-LAST:event_jLabel48MouseClicked

    private void jLabel49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel49MouseClicked
        parent.removeAll();
        parent.add(fee_entry);
        parent.repaint();
        parent.revalidate();
        show_fee();
    }//GEN-LAST:event_jLabel49MouseClicked

    private void jLabel50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel50MouseClicked
        parent.removeAll();
        parent.add(payment);
        parent.repaint();
        parent.revalidate();
    }//GEN-LAST:event_jLabel50MouseClicked

    private void search_studentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_studentKeyReleased
        try {
            con = db.start();
            ps = con.prepareStatement("SELECT * FROM students where name like '%" + search_student.getText() + "%' or admno='" + search_student.getText() + "'");
            rs = ps.executeQuery();
            students_table.setModel(DbUtils.resultSetToTableModel(rs));
            //db.stop();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_search_studentKeyReleased

    private void fee_balanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fee_balanceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_fee_balanceKeyTyped

    private void move_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_move_studentActionPerformed
        try {
            con = db.start();
            if (class_move.getSelectedIndex() == 1) {
                JOptionPane.showMessageDialog(null, "For FORM 1, Enter new Students");
            } else if (class_move.getSelectedIndex() == 2) {
                String y = String.valueOf(move_year.getSelectedItem());
                int x = Integer.parseInt(y);
                int z = x - 1;
                ps = con.prepareStatement("select * from students where class_name='FORM 1' and year='" + z + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    ps1 = con.prepareStatement("update students set class_name='" + class_move.getSelectedItem() + "',year='" + move_year.getSelectedItem() + "'"
                            + "where class_name='FORM 1' and year='" + z + "'");
                    ps1.execute();

                }
                JOptionPane.showMessageDialog(null, "Students Moved to Next Class Successfuly");

                //display moved students
                ps2 = con.prepareStatement("select admno,name,stream,fee_balance from students where class_name='" + class_move.getSelectedItem() + "' and year='" + move_year.getSelectedItem() + "'");
                rs1 = ps2.executeQuery();
                jTable3.setModel(DbUtils.resultSetToTableModel(rs1));
            } else if (class_move.getSelectedIndex() == 2) {
                String y = String.valueOf(move_year.getSelectedItem());
                int x = Integer.parseInt(y);
                int z = x - 1;
                ps = con.prepareStatement("select * from students where class_name='FORM 1' and year='" + z + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    ps1 = con.prepareStatement("update students set class_name='" + class_move.getSelectedItem() + "',year='" + move_year.getSelectedItem() + "'"
                            + "where class_name='FORM 1' and year='" + z + "'");
                    ps1.execute();

                }
                JOptionPane.showMessageDialog(null, "Students Moved to Next Class Successfuly");

                //display moved students
                ps2 = con.prepareStatement("select admno,name,stream,fee_balance from students where class_name='" + class_move.getSelectedItem() + "' and year='" + move_year.getSelectedItem() + "'");
                rs1 = ps2.executeQuery();
                jTable3.setModel(DbUtils.resultSetToTableModel(rs1));
            } else if (class_move.getSelectedIndex() == 3) {
                String y = String.valueOf(move_year.getSelectedItem());
                int x = Integer.parseInt(y);
                int z = x - 1;
                ps = con.prepareStatement("select * from students where class_name='FORM 2' and year='" + z + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    ps1 = con.prepareStatement("update students set class_name='" + class_move.getSelectedItem() + "',year='" + move_year.getSelectedItem() + "'"
                            + "where class_name='FORM 2' and year='" + z + "'");
                    ps1.execute();

                }
                JOptionPane.showMessageDialog(null, "Students Moved to Next Class Successfuly");

                //display moved students
                ps2 = con.prepareStatement("select admno,name,stream,fee_balance from students where class_name='" + class_move.getSelectedItem() + "' and year='" + move_year.getSelectedItem() + "'");
                rs1 = ps2.executeQuery();
                jTable3.setModel(DbUtils.resultSetToTableModel(rs1));
            } else if (class_move.getSelectedIndex() == 4) {
                String y = String.valueOf(move_year.getSelectedItem());
                int x = Integer.parseInt(y);
                int z = x - 1;
                ps = con.prepareStatement("select * from students where class_name='FORM 3' and year='" + z + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    ps1 = con.prepareStatement("update students set class_name='" + class_move.getSelectedItem() + "',year='" + move_year.getSelectedItem() + "'"
                            + "where class_name='FORM 3' and year='" + z + "'");
                    ps1.execute();

                }
                JOptionPane.showMessageDialog(null, "Students Moved to Next Class Successfuly");

                //display moved students
                ps2 = con.prepareStatement("select admno,name,stream,fee_balance from students where class_name='" + class_move.getSelectedItem() + "' and year='" + move_year.getSelectedItem() + "'");
                rs1 = ps2.executeQuery();
                jTable3.setModel(DbUtils.resultSetToTableModel(rs1));
            } else {
                JOptionPane.showMessageDialog(null, "No Class selected!");
            }

        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_move_studentActionPerformed

    //method to set fee to be paid
    private void term_feeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_term_feeActionPerformed
        try {
            con = db.start();

            ps = con.prepareStatement("select coalesce(sum(amount),0) from voteheads where  class_name='" + class_fee.getSelectedItem() + "' and year='" + fee_year.getSelectedItem() + "' and term='" + term_fee.getSelectedItem() + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                fee_amount.setText(rs.getString("coalesce(sum(amount),0)"));
            }

        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_term_feeActionPerformed

    private void term_amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_term_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_term_amountActionPerformed

    private void fee_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fee_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fee_yearActionPerformed

    private void dashboard1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard1MouseClicked
        parent.removeAll();
        parent.add(dashboard);
        parent.repaint();
        parent.revalidate();

    }//GEN-LAST:event_dashboard1MouseClicked

    private void dashboard2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard2MouseClicked
        parent.removeAll();
        parent.add(students);
        parent.repaint();
        parent.revalidate();
        show_students();
    }//GEN-LAST:event_dashboard2MouseClicked

    private void term_structureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_term_structureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_term_structureActionPerformed

    private void payRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payRecordsActionPerformed
        reportPane.removeAll();
        reportPane.add(record);
        reportPane.repaint();
        reportPane.revalidate();
    }//GEN-LAST:event_payRecordsActionPerformed

    private void payReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payReportsActionPerformed
        reportPane.removeAll();
        reportPane.add(payreport);
        reportPane.repaint();
        reportPane.revalidate();
    }//GEN-LAST:event_payReportsActionPerformed

    private void view_records1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_records1ActionPerformed
        DefaultCategoryDataset dcd = new DefaultCategoryDataset();
        try {
            con = db.start();

            ps0 = con.prepareStatement("SELECT COUNT(*) FROM students where students.class_name='FORM 1'");
            rs0 = ps0.executeQuery();

            ps = con.prepareStatement("select coalesce(sum(amount_paid),0) from payments where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 1'");
            rs = ps.executeQuery();

            ps1 = con.prepareStatement("select fee_amount from fees where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 1'");
            rs1 = ps1.executeQuery();
            while (rs0.next() && rs.next() && rs1.next()) {

                int stud_number = Integer.parseInt(rs0.getString("COUNT(*)"));

                double fee_paid = Double.parseDouble(rs.getString("coalesce(sum(amount_paid),0)"));

                double fee_payable = Double.parseDouble(rs1.getString("fee_amount"));

                double total_fee = fee_payable * stud_number;

                double per = (fee_paid / total_fee) * 100;

                dcd.setValue(per, "Fee Pay", "FORM 1");

                ps2 = con.prepareStatement("SELECT COUNT(*) FROM students where students.class_name='FORM 2'");
                rs2 = ps2.executeQuery();

                ps3 = con.prepareStatement("select coalesce(sum(amount_paid),0) from payments where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 2'");
                rs3 = ps3.executeQuery();

                ps4 = con.prepareStatement("select fee_amount from fees where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 2'");
                rs4 = ps4.executeQuery();
                while (rs2.next() && rs3.next() && rs4.next()) {

                    int stud_number1 = Integer.parseInt(rs2.getString("COUNT(*)"));

                    double fee_paid1 = Double.parseDouble(rs3.getString("coalesce(sum(amount_paid),0)"));

                    double fee_payable1 = Double.parseDouble(rs4.getString("fee_amount"));

                    double total_fee1 = fee_payable1 * stud_number1;

                    double per1 = (fee_paid1 / total_fee1) * 100;
                    dcd.setValue(per1, "Fee Pay", "FORM 2");

                    ps5 = con.prepareStatement("SELECT COUNT(*) FROM students where students.class_name='FORM 3'");
                    rs5 = ps5.executeQuery();

                    ps6 = con.prepareStatement("select coalesce(sum(amount_paid),0) from payments where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 3'");
                    rs6 = ps6.executeQuery();

                    ps7 = con.prepareStatement("select fee_amount from fees where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 3'");
                    rs7 = ps7.executeQuery();
                    while (rs5.next() && rs6.next() && rs7.next()) {

                        int stud_number2 = Integer.parseInt(rs5.getString("COUNT(*)"));

                        double fee_paid2 = Double.parseDouble(rs6.getString("coalesce(sum(amount_paid),0)"));

                        double fee_payable2 = Double.parseDouble(rs7.getString("fee_amount"));

                        double total_fee2 = fee_payable2 * stud_number2;

                        double per2 = (fee_paid2 / total_fee2) * 100;
                        dcd.setValue(per2, "Fee Pay", "FORM 3");

                        ps8 = con.prepareStatement("SELECT COUNT(*) FROM students where students.class_name='FORM 4'");
                        rs8 = ps8.executeQuery();

                        ps9 = con.prepareStatement("select coalesce(sum(amount_paid),0) from payments where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 4'");
                        rs9 = ps9.executeQuery();

                        ps10 = con.prepareStatement("select fee_amount from fees where term='" + records_term1.getSelectedItem() + "' and class_name='FORM 4'");
                        rs10 = ps10.executeQuery();
                        while (rs8.next() && rs9.next() && rs10.next()) {

                            int stud_number3 = Integer.parseInt(rs8.getString("COUNT(*)"));

                            double fee_paid3 = Double.parseDouble(rs9.getString("coalesce(sum(amount_paid),0)"));

                            double fee_payable3 = Double.parseDouble(rs10.getString("fee_amount"));

                            double total_fee3 = fee_payable3 * stud_number3;

                            double per3 = (fee_paid3 / total_fee3) * 100;
                            dcd.setValue(per3, "Fee Pay", "FORM 4");
                        }
                    }
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
        JFreeChart jchart = ChartFactory.createBarChart("Fee Payment " + records_term1.getSelectedItem() + " " + "Report", "Class Name", "Fee Payment(%)", dcd, PlotOrientation.VERTICAL, false, false, false);

        CategoryPlot plot = jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLACK);

//        ChartFrame chart = new ChartFrame("Student Record",jchart,true);
//        chart.setVisible(true);
//        chart.setSize(500,400);
        ChartPanel chartpanel = new ChartPanel(jchart);
        jPanel8.removeAll();
        jPanel8.add(chartpanel);
        jPanel8.updateUI();
    }//GEN-LAST:event_view_records1ActionPerformed

    private void helpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMouseClicked
        try {
            Desktop.getDesktop().open(new java.io.File("files/help.pdf"));
        } catch (IOException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_helpMouseClicked

    private void amount_paidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amount_paidKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACKSPACE) || (c == KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_amount_paidKeyTyped

    private void amount_paidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amount_paidKeyReleased
        int s1 = Integer.parseInt(amount_paid.getText());
        int n = s1;
        amount_in_words.setText(convert(n) + " only");
    }//GEN-LAST:event_amount_paidKeyReleased

    //summation of records
    public double getSum() {
        int rowsCount = jTable1.getRowCount();
        int sum = 0;
        for (int i = 0; i < rowsCount; i++) {
            sum = (int) (sum + Double.parseDouble(jTable1.getValueAt(i, 4).toString()));
        }
        return sum;
    }
    //show the fee record inserted

    private void show_fee() {
        try {
            con = db.start();
            ps = con.prepareStatement("select id,class_name,term,fee_amount from fees order by class_name");
            rs = ps.executeQuery();
            fees_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
//updates students fee balance 

    private void update_balance() {
        try {
            con = db.start();
            ps = con.prepareStatement("select fee_balance from students where class_name='" + class_fee.getSelectedItem() + "'");
            rs = ps.executeQuery();
            if (rs.next()) {
                String db_bal = rs.getString("fee_balance");
                int bala = Integer.parseInt(db_bal);
                int amount = Integer.parseInt(fee_amount.getText());
                int new_bal = bala + amount;
                ps = con.prepareStatement("update students set fee_balance ='" + new_bal + "' where class_name='" + class_fee.getSelectedItem() + "'");
                ps.executeUpdate();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void generate_receiptNo() {
        try {
            con = db.start();
            ps = con.prepareStatement("select coalesce(max(receipt_no),0) from payments");
            rs = ps.executeQuery();
            while (rs.next()) {
                String rec = rs.getString("coalesce(max(receipt_no),0)");
                int rect = Integer.parseInt(rec);
                int newRec = rect + 1;
                String Rec = Integer.toString(newRec);
                receipt_no.setText(Rec);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FinanceSystem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinanceSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FinanceSystem().setVisible(true);
        });
        Runtime r = Runtime.getRuntime();
        r.gc();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Help;
    private javax.swing.JPanel Main;
    private javax.swing.JLabel acc_credits;
    private javax.swing.JLabel acc_debits;
    private javax.swing.JButton add_student;
    private javax.swing.JLabel admin;
    private javax.swing.JTextField admno;
    private javax.swing.JTextField amount_in_words;
    private javax.swing.JTextField amount_paid;
    private javax.swing.JPanel bal;
    private javax.swing.JPanel balanc;
    private javax.swing.JLabel balance;
    private javax.swing.JTable balance_table;
    private javax.swing.JLabel balances;
    private javax.swing.JPanel balancespanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel className;
    private javax.swing.JComboBox<String> class_fee;
    private javax.swing.JComboBox<String> class_fee_balance;
    private javax.swing.JComboBox<String> class_move;
    private javax.swing.JComboBox<String> class_name;
    private javax.swing.JComboBox<String> class_structure;
    private javax.swing.JComboBox<String> class_votehead;
    private javax.swing.JComboBox<String> combo_year;
    private javax.swing.JPanel dashboard;
    private javax.swing.JLabel dashboard1;
    private javax.swing.JLabel dashboard2;
    private javax.swing.JButton delete;
    private javax.swing.JButton delete_voteheads;
    private javax.swing.JButton enter_fee;
    private javax.swing.JButton feeStatement;
    private javax.swing.JTextField fee_amount;
    private javax.swing.JTextField fee_balance;
    private javax.swing.JLabel fee_balance_label;
    private javax.swing.JPanel fee_entry;
    private javax.swing.JLabel fee_payment;
    private javax.swing.JPanel fee_structure;
    private javax.swing.JComboBox<String> fee_year;
    private javax.swing.JTable fees_table;
    private javax.swing.JButton generate_notes;
    private javax.swing.JPanel header;
    private javax.swing.JPanel header_students;
    private javax.swing.JLabel help;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JPanel main;
    private javax.swing.JPanel main_students;
    private javax.swing.JPanel manage_students;
    private javax.swing.JComboBox<String> mode_of_payment;
    private javax.swing.JButton move_student;
    private javax.swing.JPanel move_students;
    private javax.swing.JComboBox<String> move_year;
    private javax.swing.JTextField name;
    private javax.swing.JTextField notes;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel parent;
    private javax.swing.JButton payRecords;
    private javax.swing.JButton payReports;
    private com.toedter.calendar.JDateChooser pay_date;
    private javax.swing.JPanel payment;
    private javax.swing.JTextField payment_code;
    private javax.swing.JTable payments_table;
    private javax.swing.JPanel payreport;
    private javax.swing.JTextField receipt_no;
    private javax.swing.JButton receipts;
    private javax.swing.JPanel record;
    private javax.swing.JLabel records;
    private javax.swing.JComboBox<String> records_class;
    private javax.swing.JComboBox<String> records_mode;
    private javax.swing.JComboBox<String> records_term;
    private javax.swing.JComboBox<String> records_term1;
    private javax.swing.JPanel reportPane;
    private javax.swing.JScrollPane reportPanel;
    private javax.swing.JPanel reports;
    private javax.swing.JButton save_votehead;
    public javax.swing.JButton search;
    private javax.swing.JLabel searchName;
    private javax.swing.JTextField search_student;
    private javax.swing.JPanel sidebar;
    private javax.swing.JLabel stream;
    private javax.swing.JComboBox<String> stream_name;
    private javax.swing.JLabel structure;
    private javax.swing.JTextField student_id;
    private javax.swing.JTextField student_name;
    private javax.swing.JPanel students;
    private javax.swing.JTable students_table;
    private javax.swing.JButton submit;
    private javax.swing.JComboBox<String> term;
    private javax.swing.JLabel termFee;
    private javax.swing.JTextField term_amount;
    private javax.swing.JComboBox<String> term_fee;
    private javax.swing.JComboBox<String> term_structure;
    private javax.swing.JComboBox<String> term_votehead;
    private javax.swing.JTextField tsum;
    private javax.swing.JButton update_fee;
    private javax.swing.JButton update_votejead;
    private javax.swing.JButton view_records;
    private javax.swing.JButton view_records1;
    private javax.swing.JButton view_structure;
    private javax.swing.JPanel voteHeads;
    private javax.swing.JTextField vote_head;
    private javax.swing.JComboBox<String> votehead_year;
    private javax.swing.JLabel voteheads;
    private javax.swing.JTable voteheads_table;
    // End of variables declaration//GEN-END:variables
   private final ImageIcon format = null;
    String filename = null;
    byte[] person_image = null;

}
